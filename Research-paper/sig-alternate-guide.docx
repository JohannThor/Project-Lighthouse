Alternate Author's Guide to Preparing ACM SIG Proceedings
Using LaTEX2 and BibTEX

Overview of this Document
1.  Getting Started
Summary of ACM SIG Proceedings Format
      1.2  Using the Alternate ACM LaTEX2 Document Class and BibTEX Style Files
      1.3  Beginning your LaTEX Source File
2.  The Structure of the Article
      2.1  Some Housekeeping Details
      2.2  The Title and Author Information
      2.3  The Body of the Article
      2.4  Acknowledgements
      2.5  Additional Authors
      2.6  The Bibliography
      2.7  Appendix
      2.8  A Final Bit of Formatting

Overview of this Document
This document explains how to use LaTEX2 and BibTEX with Alternate document class and style files (sig-alternate.cls) provided by ACM to create a paper that closely matches, but does not strictly conform to, the ACM SIG Proceedings format.  Section 1 gives a summary of the ACM SIG Proceedings format and a general look at the use of the ACM LaTEX2 Alternate document class and BibTEX style files.  Section 2 discusses, in fairly thorough detail, the structure of the LaTEX file for your Alternate article and, in much more general terms, the structure of BibTEX file.
Note: 
The reason for the existence of this Alternate style is for those authors/conference chairs who have an aversion to using the SIGS (board-endorsed) de facto style. This Alternate can produce a tighter-looking paper which may reduce the total number of pages and thus possibly offset the need for additional page-charges. 

For detailed instructions on using LaTEX2, refer to the LaTEX User's Guide and Reference Manual, Second Edition, by Leslie Lamport.

1.  Getting Started
1.1  Summary of ACM SIG Proceedings Format

We’ll begin by summarizing some formatting guidelines for ACM SIG Proceedings.  The proceedings are the records of the conference.  ACM hopes to give these conference by-products a single, high quality appearance.  

Page Size and Layout:  All material on each page should fit within a rectangle of 18 × 23.5 cm (7" × 9.25"), centered on the page, beginning 1.9 cm (0.75") from the top of the page and ending with 2.54 cm (1") from the bottom.  The right and left margins should be 1.9 cm (.75"). The text should be in two 8.45 cm (3.33") columns with a .83 cm (.33") gutter. 

All body text is set in two columns.  The two columns on the last page should be of (nearly) equal length.

Normal or Body Text:  The body text is set in 9-point Times (Roman).  Use sans serif or nonproportional fonts only for special purposes, such as distinguishing source code text.  Right margins should be justified, not ragged. This Alternate style uses the indenting of paragraphs, to visually distinguish between successive paragraphs, instead of the de facto style which uses a full line space. This may help reduce the total number of pages.

Title and Author Information:  The title (Helvetica or Arial 18-point bold), authors’ names (Helvetica or Arial 12point), author addresses, affiliations and phone number (Helvetica or Arial 10-point) and email address (Helvetica 12 point) run across the full width of the page.  Up to three author names and information blocks may be aligned at the top of the first page; any additional author information appears in a paragraph at the end of the paper.

References and Citations:  Footnotes should be Times (Roman) 9-point.  The format of references is a numbered list at the end of the article, ordered alphabetically by first author, and referenced by numbers in brackets e.g. [1].

References should be published materials accessible to the public.  Internal technical reports may be cited only if they are easily accessible (i.e. you can give the address to obtain the report within your citation) and may be obtained by any reader.  Proprietary information may not be cited.  Private communications should be acknowledged, not referenced (e.g. "[Robertson, personal communication]").

Page Numbering, Headers and Footers:  Do not include headers or footers in your submission.  Page numbers are not output by the sig-alternate.cls file.

Hierarchical Section Headings:  The heading of a section should be in Times (Roman) 12 point bold in all-capitals flush left.  Sections and subsequent subsections should be numbered and flush left.

The heading of subsections should be in Times (Roman) 12 point bold with only the initial letters capitalized. (Note: For subsections and subsubsections, a word like the or a is not capitalized unless it is the first word of the header.)

The heading for subsubsections (or lower) should be in Times (Roman) 11-point italic with initial letters capitalized.

1.2  Using the ACM LaTEX2 Document Class and BibTEX Style Files
Now that you know more about the Alternate ACM SIG Proceedings format, you can rest assured that you won’t have to fuss very much with the niceties of it. By using LaTEX2 and BibTEX with the Alternate ACM document class and bibliographic style files, and creating .tex and .bib files that use the appropriate commands, virtually all of the nitty-gritty of the format detailed above is handled properly for you.

The balance of this document will focus on using LaTEX2 and BibTEX with the Alternate ACM document class and bibliographic style files to produce your article.  In general, it assumes you are familiar with LaTEX and BibTEX on your site.  [For those who are not:  LaTEX is available for a variety of computer systems.  While all versions are essentially the same — an input file created on one should produce identical output on any other (font issues notwithstanding) but how you actually run LaTEX may vary from system to system.]

A few remarks for users of LaTEX 2.09: LaTEX2 is simply the latest standard version of LaTEX.  As a matter of fact, almost all standard LaTEX2.09 input files could be typeset with LaTEX2 and will work with the sig-alternate.cls file.  However, to make best use of the new features, you should use the new LaTEX2 conventions; the changes are few and not at all onerous.  Throughout this document, ‘LaTEX’ means ‘LaTEX2’.

Obtaining the Document Class and Bibliographic Style Files.  You can receive instructions on how to obtain the document class file (sig-alternate.cls) and related information (including this document) either:
 by visiting ACM’s home page at 
   http://www.acm.org/publications/article-templates/proceedings-template.html, or
 by sending an E-mail message to griscti@acm.org.   

You will probably want to put the sig-alternate.cls file in your LaTEX local style directory so that LaTEX can find it at run time.

The document class file contains the commands which define the various structural parts of the document to format an ACM SIG Conference proceedings paper, in the Alternate style, and produce camera-ready copy: 

Once you have the document class file and are ready to begin writing your article, write, revise, and prepare your article for submission as you usually do with LaTEX, using information from:
  Author's Guide to Preparing ACM SIG Proceedings Using LaTEX2  and BibTEX (this document)
  Additional information can be obtained from http://www.acm.org/sigs/ and
  LaTEX  User's Guide and Reference Manual [Second Edition] (Leslie Lamport)

Remember, you should use only the structural commands in the sig-alternate.cls file, but you many use any of the typographical commands – such as accented or non-English characters and the mathematical characters and structures – from LaTEX.


1.3  Beginning Your LaTEX Source File
It is not necessary, but it is sensible and highly recommended, to begin your document with several comment lines showing the file name, your name, a brief revision history, and any other pertinent comments about the file.  Each line of a comment in a  LaTEX document begins with a %; comments in the source document do not appear in the output.  

EXAMPLE
% sig-alternate.tex
% Alternate ACM SIG Proceedings document using LaTeX2e
% Author: G.K.M. Tobin / Gerry Murray
% based upon LaTeX2.09 Guidelines, 9 June 1996
% Revisions:  1 September 1999
%             21 October 1999
%             1 July 2000

The very first (non-commented) lines in your file must be
\documentclass{sig-alternate}
\begin{document}

This tells LaTEX to add the Alternate ACM style file’s structural commands to the suite of typographic commands already available, and to begin working in the ACM document environment.

The very last (non-commented) line in your file must be
\end{document}

All the rest of your LaTEX document is “bracketed”, as it were,  by these commands.

A word to the novice: if you have some previous experience with LaTEX, you will probably find it very helpful and instructive to obtain the source files of the sample document
(sig-alternate.tex and sigproc.bib), to run them through LaTEX and BibTEX, and to compare the source code with the printed output.

A word to the expert: If you have routinely used LaTEX or TEX for a long time, you may be tempted to write your own improvements to the structural definitions in the sig-alternate.cls file, or to use other commands to streamline typesetting. Please refrain from doing this!  Remember your final submission file will be recompiled at ACM (to insert page numbers etc.) using known .tex, .sty and .cls files. ACM's reference files will, therefore, not contain any author tweaks or local enhancements. Problems will arise if your source file expects them to. Also, please be very careful when using \def in your source file as you may, inadvertantly, redefine a reserved LaTEX or TEX keyword.
2.  The Structure of the Article
Your can think of your article as having this general structure: the Title and Author Information (including title and author information along with any footnotes on title, subtitle and authors and not forgetting the “additional” authors which appear at the end of the document); the Body of the Article (including text, citations, figures, tables and equations); Acknowledgements; Bibliography; and Appendices.  

The Title and Author Information is rather rigid in its internal organization, requiring specific elements in a specific order.  The organization of the Body of the Article is determined to a great extent by the type of information you are communicating in your article.  The Acknowledgements and Appendices section are optional, and are included only if you require them; likewise, their contents and internal organization are entirely up to you.  The Bibliography section is produced automatically by BibTEX, from the citations you insert in your article and the contents of the .bib file.

Each of these five general parts of the document is dealt with in detail below.  Finally, there is one last bit of formatting that you need to do manually, once everything else is set and working the way you want.


2.1  Some Housekeeping Details
There are a few details that must be attended to in the final, published version of the Proceedings.  Thus, they are really the purview of the editor or referees for the Proceedings, but they are mentioned here for completeness.  Authors can omit any or all three of these tags, without causing LaTEX to fail; there will just be gaps in the copyright information at the bottom of the first page (e.g. in the case of \conferenceinfo). 


2.1.1  Conference Information
There are several possibilities for the copyright of the papers published by ACM: the authors may transfer the rights to ACM, license them to ACM, some or all authors might be employees of the US or Canada Government, etc. Accordingly the new command \setcopyright{...} is introduced. Its argument is the copyright status of the paper, for example, \setcopyright{acmcopyright}. Some possible values for this command are listed in Table I.



The ACM Rights Form submission software will generate the right command for you to paste into
your fie.

There are several other commands generated by the software as well. Below we describe them.
Each paper in ACM journals and proceedings must have a DOI number. It is set up by
the command \doi, for example,

\doi{http://dx.doi.org/10.1145/0000000.0000000}

Each ACM journal has an ISSN number, which is set by the command \issn, for example,

\issn{0004-5411}

The commands \acmVolume, \acmNumber, \acmArticle, \acmYear set up the information
about the volume, issue, article number and year of publication. As a rule they are inserted
by the publisher on the final stages of preparation.

For proceedings you need to insert ISBN, the conference name, date and location. They
are set by the commands \conferenceinfo, \isbn, and \acmprice correspondingly, for example,

\conferenceinfo{AOSD'12,}{ March 25--30, 2012, Hasso-Plattner Institut Potsdam, Germany}
\isbn{978-1-4503-3472-3/15/07}\acmPrice{\$15.00}


These commands will be provided by the ACM software after completion of the ACM eRights form; you need just to insert them into the manuscript before \maketitle.

2.2  Title and Author Information
As noted above, the internal organization of the title and author is rather rigid.  The following outline shows the basic organization of the front matter; an explanation of each element is given in subsections 2.2.1 through 2.2.4.  Unless noted as OPTIONAL, each element below is required, and required in the order indicated.  (This same outline is repeated, with the actual LaTEX command or environment in lieu of the description for each element given below, in section 2.2.4 of this document.)

 Title 
footnote about title (OPTIONAL)
 Subtitle (OPTIONAL)
	footnote(s) about subtitle (OPTIONAL)
 Author or authors information
	includes names, affiliations, addresses and e-mail addresses
	footnote(s) about author(s) (OPTIONAL)


2.2.1 Title of the Paper
The \title{} command takes one argument: the title of your article.  You may insert \\ (line breaks) to indicate desirable line breaks for the title; if you do not insert line breaks, LaTEX may insert them in ways that you find unaesthetic.

You should enter the title in mixed upper and lower case. You may indicate emphasis with the \ttlit command, and you may of course enter any required special characters with the appropriate LaTEX command.  If you need to enter math mode characters, use \huge size for the best match of math characters to title characters.

EXAMPLE
\title{On {\huge$\mathrm{ACC}^0[p^k]$} Proofs}

If you need to include any information about the title in a note at the bottom of the page, use the \titlenote{} command.  The text of the note is the argument of the \titlenote{} command; ‘numbering’ (actually, symbols are used to indicate order in the title notes) is done automatically.  The \titlenote{} command and its argument should be contained within the argument of the \title{} command.


EXAMPLE
\title{A Novel Application for B$\acute{\mbox{e}}$zier Curves}

\title{On Sorting Strings in External Memory\titlenote{Paper presented at the STOC ’97 in El Paso.}}

You may have up to five occurrences of the \titlenote{} command throughout the title and author information block.


2.2.2  Subtitle of the Paper
The \subtitle{} command takes one argument: a subtitle of your paper.  Most often, this is the remark that a paper is an “Extended Abstract”, but you may use it for any text that should be centered in a smaller type size below the title and before the author information block.

You should enter the subtitle in mixed upper and lower case. You may indicate emphasis with the \subttlit command or emboldening with  \subttlbf, and you may of course enter any required special characters with the appropriate LaTEX command.

If you need to include any information about the subtitle in a note at the bottom of the page, use the \titlenote{} command.  The text of the note is the argument of the \titlenote{} command; numbering is done automatically.  The \titlenote{} command and its argument should be contained within the argument of the \subtitle{} command.

EXAMPLE
\subtitle{[Extended Abstract]\titlenote{The full paper will appear in the Journal of Theoretical Practice.}}

The \subtitle{} command is optional.


2.2.3  Author or Authors
The Proceedings format calls for ‘alignment’ of the names and affiliations of the authors beneath the article title. There is no restriction on the number of authors that can appear beneath the title, however, for aesthetic reasons, we ask that you refrain from rendering more than six, in two rows and three columns. The seventh and eigth, additional authors’ names, will be listed in a section at the end of the paper.  To help LaTEX to handle this formatting, use the command \numberofauthors{}, which takes the single argument, none other than the total number of authors.  

Now, how to handle all those author names…  The \author{} command takes one argument, but it may be a long and complex one: the names of all authors who wish to appear beneath the article title, along with their affiliations and addresses and email addresses, and any footnotes that must go with an individual’s name.  Let’s go through the details of this block of author information.

Start each of the author’s name and affiliation with the \alignauthor command, which takes no argument, but handles some calculations to align and center the author information properly.  If there is a footnote for an author, you must use the \titlenote{} command, with the text of the footnote as its argument.  End each line of the author information with \\ to ensure proper line breaks.  (For more information regarding \titlenote{} see the FAQ)

Next, use the command \affaddr{} which takes as its argument a line of affiliation or address to ensure the proper formatting of the address and affiliation for each author.  Finally, use \email{} with the argument of an email address to properly format that nugget of author information.

EXAMPLES
A single author:  
\numberofauthors{1}
\author{
\alignauthor Ben Trovato\titlenote{Dr.~Trovato insisted his name be first, as he has an inordinately and inexplicably high opinion of himself.}\\
       \affaddr{Institute for Clarity in Documentation}\\
       \affaddr{1932 Wallamaloo Lane}\\
       \affaddr{Wallamaloo, New Zealand}\\
       \email{trovato@corporation.com}
}

Two authors:  
\numberofauthors{2}
\author{
\alignauthor Ben Trovato\titlenote{Dr.~Trovato insisted his name be first, as he has an inordinately and inexplicably high opinion of himself.}\\
       \affaddr{Institute for Clarity in Documentation}\\
       \affaddr{1932 Wallamaloo Lane}\\
       \affaddr{Wallamaloo, New Zealand}\\
       \email{trovato@corporation.com}
\alignauthor Lars Th{\o}rv\"{a}ld\titlenote{This author is the one who did all the really hard work.}\\
       \affaddr{The Th{\o}rv\"{a}ld Group}\\
       \affaddr{1 Th{\o}rv\"{a}ld Circle}\\
       \affaddr{Hekla, Iceland}\\
       \email{larst@affiliation.org}
}

Six authors:
\numberofauthors{6}
\author{
% 1st. author
\alignauthor
Ben Trovato\titlenote{Dr.~Trovato insisted his name be first.}\\
       \affaddr{Institute for Clarity in Documentation}\\
       \affaddr{1932 Wallamaloo Lane}\\
       \affaddr{Wallamaloo, New Zealand}\\
       \email{trovato@corporation.com}
% 2nd. author
\alignauthor
G.K.M. Tobin\titlenote{The secretary disavows
any knowledge of this author's actions.}\\
       \affaddr{Institute for Clarity in Documentation}\\
       \affaddr{P.O. Box 1212}\\
       \affaddr{Dublin, Ohio 43017-6221}\\
       \email{webmaster@marysville-ohio.com}
% 3rd. author
\alignauthor Lars Th{\Large{\sf{\o}}}rv{$\ddot{\mbox{a}}$}ld\titlenote{This author is the
one who did all the really hard work.}\\
       \affaddr{The Th{\large{\sf{\o}}}rv{$\ddot{\mbox{a}}$}ld Group}\\
       \affaddr{1 Th{\large{\sf{\o}}}rv{$\ddot{\mbox{a}}$}ld Circle}\\
       \affaddr{Hekla, Iceland}\\
       \email{larst@affiliation.org}
\and  % use '\and' if you need 'another row' of author names
% 4th. author
\alignauthor Lawrence P. Leipuner\\
       \affaddr{Brookhaven Laboratories}\\
       \affaddr{Brookhaven National Lab}\\
       \affaddr{P.O. Box 5000}\\
       \email{lleipuner@researchlabs.org}
% 5th. author
\alignauthor Sean Fogarty\\
       \affaddr{NASA Ames Research Center}\\
       \affaddr{Moffett Field}\\
       \affaddr{California 94035}\\
       \email{fogartys@amesres.org}
% 6th. author
\alignauthor Charles Palmer\\
       \affaddr{Palmer Research Laboratories}\\
       \affaddr{8600 Datapoint Drive}\\
       \affaddr{San Antonio, Texas 78229}\\
       \email{cpalmer@prl.com}
}

If you need more than two rows, use the \and command ‘in between’ each row.  You may include any affiliation, address or email information here, using only text format tags; i.e. don’t tag the email address using the \email{} command, simply use \texttt{}.
Any additional authors (and other information), not wishing to appear beneath the title should be put as the argument to the command \additionalauthors{}.

EXAMPLES
\numberofauthors{5}
.
[\author{…} 3 of the 5 goe here so as to appear beneath the title]
.
\additionalauthors{Additional authors: John Smith (The Th{\o}rvald Group, email: {\texttt{jsmith@affiliation.org}}) and Julius P.~Kumquat (The Kumquat Consortium, email: {\texttt{jpkumquat@consortium.net}}).}

Be certain to note that there is only one occurrence of \author in each document; you do not have multiple occurrences of \author surrounding each author and affiliation.  You should insert \\ (line breaks) between a name and each line of affiliation and/or address, and you may insert one for a desirable break if either line is too long to fit on a single line.  

You should enter the author’s/authors’ names and affiliation in  mixed upper and lower case.  You may use any of LaTEX’s accented characters as required in an author or organization name.  You may put a tie accent (the tilde with no backslash) between an initial and a subsequent part of the name to improve spacing.

2.3  The Body of the Article
The body of your paper will start out with an abstract, categories, subject descriptors and general terms. Beyond that, there are very few requirements: the text of the body of the article is organized as you see fit to best communicate your ideas.  Type style changes and accents and symbols from languages other than English may be necessary for clarity and precision.  Moreover, the body of the article may contain equations and other mathematical structures, as well as figures and tables.  The body of the article will also include citations to works referenced in the bibliography.

Each of these different aspects of the body of your article will be considered in turn below.

 
2.3.1  Abstract
The abstract of the article is put in the abstract environment.  Place the control sequence \begin{abstract} at the front of the abstract and \end{abstract} at the end.   Multiple paragraphs may be separated by a blank line.


2.3.2  Categories and Subject Descriptions

http://www.acm.org/about/class/class/2012. Please read the HOW TO CLASSIFY WORKS USING ACM'S COMPUTING CLASSIFICATION SYSTEM for instructions on how to classify your document using the 2012 ACM Computing Classification System.
CCS codes are used both in the typeset version of the publications and in the
metadata in the various databases. Therefore you need to provide both TEX commands and
XML metadata with the paper. The tool at http://dl.acm.org/ccs.cfm can be used to generate CCS codes. After you select the topics, click on \Generate CCS codes" to get the result like the following:

\begin{CCSXML}
<ccs2012>
<concept>
<concept_id>10010520.10010553.10010562</concept_id>
<concept_desc>Computer systems organization~Embedded systems</concept_desc>
<concept_significance>500</concept_significance>
</concept>
<concept>
<concept_id>10010520.10010575.10010755</concept_id>
<concept_desc>Computer systems organization~Redundancy</concept_desc>
<concept_significance>300</concept_significance>
</concept>
<concept>
<concept_id>10010520.10010553.10010554</concept_id>
<concept_desc>Computer systems organization~Robotics</concept_desc>
<concept_significance>100</concept_significance>
</concept>
<concept_id>10003033.10003083.10003095</concept_id>
<concept_desc>Networks~Network reliability</concept_desc>
<concept_significance>100</concept_significance>
</concept>
</ccs2012>
\end{CCSXML}
\ccsdesc[500]{Computer systems organization~Embedded systems}
\ccsdesc[300]{Computer systems organization~Redundancy}
\ccsdesc{Computer systems organization~Robotics}
\ccsdesc[100]{Networks~Network reliability}

For papers just copy this code and paste it in your paper anywhere before \maketitle.
For proceedings the CCS categories are not printed by default; to make them printed add
after the code above the command \printccsdesc.

2.3.3  Keywords
The command \keywords{} takes a single argument: a list, separated by commas, of the additional key words and phrases in alphabetical order.  By convention,  you should capitalize only the first letter of the first word. 

**keywords or phrases should be short and must not include commas. 

There is only one occurrence of the \keywords command in any given article, not one occurrence for each keyword.

Do not break the list of keywords with \\ (line break) if the line is too long; LaTEX will handle line breaking.

EXAMPLE
\keywords{Discrete event modeling, encapsulation, event-driven simulation, modularity, parallel discrete event simulation, process interaction}


2.3.4  Type Styles and “Special” Characters
As you probably know, LaTEX has the ability to change type styles and to use accents and symbols from other languages.  Remember, that the type style changes that occur in distinguishing structural parts of the document are handled by the sig-alternate.cls commands.  For instance, the larger, bolder type of the title is provided automatically by making the text  the argument to the \title command.  Nevertheless, you will likely need occasionally to denote non-structural text as italicized (use the \textit command), as emboldened (use the \textbf command) or as typewriter style (use \texttt command).  Please take care with the position of the curly brackets when changing typefaces;  all text you wish to be in the “changed” typeface must be contained within the curly brackets.  

An aside for users of earlier versions of LaTEX or plain old TEX:  The way that font style changes are done has changed, viz. the \textit command italicizes only its argument; thus, 

\textit{Italicize this!} But not this. 

will result in 
Italicize this!  But not this.

However, those used to the old “toggle” style change command might be surprised that
\textit Italicize this!  \textrm But not this. 
will result in:
Italicize this!  But not this.
Because, in the absence of brackets delineating the argument, only the first letter of the following text has the style change applied.

Another change is that style change commands can be combined to produce a variety of styles within the current font family.  So, for instance,
\textit{Italicize this, and \textbf{boldly}!} 
produces
Italicize this, and boldly!
while
Make all your style changes \textbf{boldly} and with conviction. 
Results in
Make all your style changes boldly and with conviction.

In short, the result of \textbf, or any other text style command, is dependent upon the font context (i.e., the current style of text) in which it is applied.

Note also that the old “toggle” commands \it, \tt, and so on still work; but do upgrade to the newer commands to keep your documents as clean and consistent as possible.

Finally, note that none of the style commands discussed above (or any of the other \textnn commands) can be used in math mode.  See section 2.3.7 below for a discussion of changing font style in math mode.

EXAMPLES
. . .since we would have to be in \textit{both} of \textit{B} and {\textit{C}. . . 

We extend \textbf{superstate} and \textbf{overlap} to sets . . .

. . .type \texttt{help@acm.org} in the . . .

You may also require accented characters or foreign language characters.  These commands allow you to handle very small pieces of foreign text in an English document.  Note that Greek letters used in mathematics are handled in a slightly different way from these commands (see section 2.3.7).  Refer to the LaTEX User’s Guide & Reference Manual for a complete list of the commands available.

Remember that the commands for accented and foreign characters can be used in any section of your document where needed, not just in the body of the article.




2.3.5  Headings within Text
The text of your article probably has a hierarchical organization of major sections and various smaller sections.  The sig-alternate.cls file has commands available to assist you in delineating this structure, by providing different type conventions for each level of heading and providing automatic numbering where desired.

The command \section is the highest hierarchical section heading.  It takes a single argument: the text of the heading for that section.  The heading should be entered in mixed upper and lower case, and no heading number should be given.  LaTEX will add the appropriate heading number of form digit., cause a line break to occur after the heading, and set the heading in the appropriate type style.  Although sections are generally numbered in ACM journals, \section* may be used in lieu of \section to produce an unnumbered section-level heading. Since a special typeface is stipulated in the .cls file for the section headings, use the command \secit to indicate italicized text in the section heading.

The command \subsection is the next, or second highest, hierarchical section heading.  It takes a single argument, the text of the heading for that subsection.  The heading should be entered in mixed upper and lower case, and no heading number should be given.  LaTEX will add the appropriate heading number of form digit.digit, cause a line break to occur after the heading and set the heading in the appropriate type style.  Although subsections are generally numbered in ACM journals, \subsection* may be used in lieu of \subsection to produce an unnumbered subsection-level heading. Since a special typeface is stipulated in the .cls file for the subsection headings, use the command \subsecit to indicate emphasized text in the subsection heading.

The command \subsubsection is the third highest hierarchical section heading.  It takes a single argument, the text of the heading for that sub-subsection.  The heading should be entered in mixed upper and lower case, and no heading number should be given.  LaTEX will add the appropriate heading number of form digit.digit.digit and set the heading in the appropriate type style.  The command \subsubsection* may be used in lieu of \subsubsection to produce an unnumbered subsection-level heading.

The command \paragraph is the lowest hierarchical section heading.  It takes a single argument, the text of the heading for that portion of the article (paragraph is a bit of a misnomer, as more than one paragraph of text can occur below a \paragraph heading).  The heading should be entered in mixed upper and lower case, and no heading number should be given.  LaTEX will add the appropriate heading number of form digit.digit.digit.digit and set the heading in the appropriate type style.  The command \paragraph* may be used in lieu of \paragraph to produce an unnumbered subsection-level heading.

By the way, there is no visual distinction between the output of the command \subsubsection* and that of \paragraph*; only the numbered versions are distinguishable.  The reader may decide whether that is a hint or a caveat.

EXAMPLE
\section{Conclusion}
	 text
\subsection{Experimental Results}
	text
\subsection{Analysis of Results}
	text
\subsubsection{Analytical Method}
	text
\subsubsection{Problems with Data}
	text
\paragraph*{The Dog Ate the Printout}
	text
\subsection{Author's Findings}
	text
\subsection{{\subsecit De Facto} Conclusions}
	text


2.3.6  Mathematical and Logical Structures
The sig-alternate.cls file already provides you with environments for math expressions and provides you with a means to add additional logical constructs.

The equation environment renders mathematical expressions within it in “display math style” (i.e. vertical space occurs before and after the equation(s), and it is/they are centered horizontally) and automatically adds the appropriate equation number in parentheses right justified and vertically centered.

EXAMPLE
\begin{equation}
    y = x^2 + x + 1
\end{equation}

The displaymath environment renders mathematical expressions within it in “display math style” (as described above) but does not number the equation.

EXAMPLE
\begin{displaymath}
    y = x^2 + x + 1
\end{displaymath}

The math environment renders mathematical expressions within it in inline (i.e., no vertical space between text and equation) math style.  Surrounding dollar signs are a common and useful shortcut for the math environment.


EXAMPLE
We find that \begin{math} y = x^2 + x + 1\end{math} is. . .
We find that $y=x^2 + x + 1$ is. . .

Users of earlier versions of LaTEX will want to note the new rules in LaTEX2 for changing fonts within math mode, such as \mathit (change to italic in math), \mathrm (change to roman in math) and \mathbf (change to bold in math).  These commands change the style only of letters, numbers and uppercase Greek letters; nothing else is affected.  

The rules for all the complexities of math expressions that may be expressed within such environments are far beyond the scope of this document.  Please refer to the LaTEX User’s Guide & Reference Manual for a complete list of mathematical structures and symbols.

In addition to the actual “math mode” environments, wherein math symbols and structures are the norm and text is the exception, you may also want environments in which the content is primarily textual, but which contain logical constructs, such as algorithms, answers, assertions and axioms (and that’s just the A’s!).  

One group of such constructs has the form of a theorem, i.e. the name of the construct appears in small caps, its appropriate number is appended, and the text is set in italics.  For each of these, use the command \newtheorem once, before the first use of the construct.  The command \newtheorem takes two arguments, the first the lower case name of the environment, and the second the capitalized tagline to appear before each occurrence of the construct.

EXAMPLE
\newtheorem{axiom}{Axiom}
\begin{axiom}Every nonempty set of real numbers that has an upper bound has a {\it least} upper bound.\end{axiom}
Note that the \newtheorem command occurs only once  for each different logical construct you specify.  Also remember that text is assumed as the contents of any of the environments created with the \newtheorem command; if you use a mathematical expression, you must stipulate the math environment you want.

Other logical constructs that have the same appearance, for which you will want to add an appropriate \newtheorem command when they occur in your document, are:
	Algorithm	Corollary	Proposition
	Assertion	Criterion	Reduction
	Axiom		Hypothesis	Sublemma
	Conjecture	Lemma	Theorem

Another group of such constructs has the form of a definition or convention (among others), i.e., the name of the construct appears in italics, its appropriate number is appended, and the text is set in Roman.  For each of these, use the command \newdef once, before the first use of the construct.  The command \newdef takes two  arguments, the first the lower case name of the environment, and the second the capitalized tagline to appear before each occurrence of the construct.

Please note: the first argument is the non-displayed name of the environment; you can name your environment anything you want, of course, but it makes most sense to simply call the environment by the same word that will appear in the tagline (the second argument).

EXAMPLE
\newdef{answer}{Answer}
\begin{answer}
\begin{displaymath}
{\bf a \cdot b} = (2)(1) + (1)(1) + (1)(-3) =2+1-3=0
\end{displaymath}
Since the dot product is 0, the two vectors must be perpendicular.  The angle between them is $\frac{1}{2}\pi$ radians.\end{answer}
% later in document, answer to another problem
\begin{answer}42\end{answer}

Note that the \newdef command occurs only once for each different logical construct you specify.  Also remember that text is assumed as the contents of any of the environments created with the \newdef command; if you use a mathematical expression, you must stipulate the math environment you want.

Other logical constructs that have the same appearance, for which you will want to add an appropriate \newdef command when they occur in your document, are:

	Answer		Convention		Problem
	Application		Definition		Property
	Affirmation		Discussion		Subcase
	Assumption		Example		Step
	Case			Exercise		Technique
	Claim			Fact			Type
	Comment		Notation		Question
	Conclusion		Note			Remark
	Condition		Observation

One other environment is already provided by sig-alternate.cls.  The proof environment precedes the text entered with the tagline Proof in the appropriate typestyle, is not numbered and concludes the text with an open square dingbat.

EXAMPLE
\begin{proof} If $x$ is in the range of $f$, then $f$ must take on the value $x$ at some number.  Since $f$ is one-to-one, there can be only one such number.  We call it $g(x)$. \end{proof}

	
2.3.7  Citations
Citations to articles or books listed in the Bibliography section of your article will occur throughout the text of your article.  You must create a .bib source file and use BibTeX to automatically produce this bibliography; you simply need to insert the command \cite in the proper location in the text of the body of the article.  The command \cite has a single argument, the key for the item cited.  The key is a short reference you invent to uniquely identify each work; typically the key is the first author's surname and a word from the title, separated by a colon.  This unique identifying key is included with each item in the .bib file for your article.  

A citation may reference more than one work.

EXAMPLE
..with the second edition of \textit{Fundamentals of Interactive Computer Graphics}, by Foley et al. \cite{foley:fundamentals}

Other systems use a spreadsheet model for accessing attributes of objects \cite{myers:graphical,wilde:spreadsheet}

These examples are from an article in \textit{ACM Transactions on Information Systems} \cite{pausch:lessons}

More information on how the indentifier key must tie in to the .bib file, and on the .bib file itself, can be found below in Section 2.5.


2.3.8  Tables
The sig-alternate.cls file already provides you with environments for proper placement and formatting of tables with captions in your document.  Because tables cannot be split across pages, and because half-empty pages are undesirable, the table and table* environment allows tabular information to “float” to a convenient location, such as the start of the following page.  

To include a table that is no wider than a single column of text, use the table environment.  The commands \begin{table} and \end{table} should surround all material comprising the table, including the table caption.  This should be followed by the command \centering (which takes no argument) to center the tabular information horizontally on the page.  Then, use the command \caption with a single argument, the text of the caption, to correctly number and caption your table.  Next, you must use the tabular environment to control the formatting of the actual contents of the table; use the commands \begin{tabular} and \end{tabular}.

To include a table that is wider than a single column of text, up to the total page width, use the table* environment.  The commands \begin{table*} and \end{table*} should surround all material comprising the table, including the table caption.  This should be followed by the command \centering (which takes no argument) to center the tabular information horizontally on the page.  Then, use the command \caption with a single argument, the text of the caption, to correctly number and caption your table.  Next, you must use the tabular environment to control the formatting of the actual contents of the table; use the commands \begin{tabular} and \end{tabular}.

The niceties of formatting tabular material in rows and columns are beyond the scope of this document; you can find all the details in the LaTEX User Guide.  Note that mathematical symbols, non-English language symbols and/or changes in typestyle are permitted in the table and tabular environments; use the normal commands or environments.

EXAMPLES
% Single-column table
\begin{table}
\centering
\caption{Frequency of Special Characters}
\begin{tabular}{|c|c|l|} \hline
Non-English or Math Characters&Frequency&Comments\\ \hline
\O & 1 in 1,000& Useful for Swedish names\\ \hline
$\pi$ & 1 in 5& Very common in math\\ \hline
\$ & 4 in 5 & Used in business\\ \hline
$\Psi^2_1$ & 1 in 40,000& Unexplained usage\\ \hline
\end{tabular}
\end{table}

% Full page width table
\begin{table*}
\centering
\caption{Some Typical Commands}
\begin{tabular}{|c|c|l|} \hline
Command&A Number&Comments\\ \hline
\texttt{{\char'134}alignauthor} & 100 & Author alignment\\ \hline
\texttt{{\char'134}numberofauthors} & 200 & Author enumeration\\ \hline
\texttt{{\char'134}table} & 300 & For tables\\ \hline
\texttt{{\char'134}table*} & 400 & For wider tables\\ \hline\end{tabular}
\end{table*}
% end the environment with {table*}, not {table}!

You may use the table, table* and tabular environments anywhere in the body of the article or the appendices, for every occurrence of table information.  Place the table or table* environment and its contents just past the point where it is first mentioned; remember, this location will change to accommodate desirable page breaks.


2.3.9  Figures
The sig-alternate.cls file already provides you with environments for proper placement of figures with captions in your document.  Because figures cannot be split across pages, and because half-empty pages are undesirable, the figure and figure* environments allows graphics to “float” to a convenient location, such as the start of the following page.  

To include a figure that is no wider than a single column of text, use the figure environment.  The commands \begin{figure} and \end{figure} should surround the figure, including the figure caption.  The \begin{figure} command should be followed by the command \centering (which takes no argument) to center the graphic horizontally on the page.  

To include a figure that is wider than a single column of text, up to the total page width, use the figure* environment.  The commands \begin{figure*} and \end{figure*} should surround the figure, including the figure caption.  The \begin{figure*} command should be followed by the command \centering (which takes no argument) to center the graphic horizontally on the page.

Encapsulated PostScript – Use the command \epsfig to reference an .eps figure in the body of the article in order to preview or print it with LaTEX  (assuming you have the proper driver).
The command \epsfig takes a single argument composed of one or more parameters (more on that, in a moment) separated by commas.  The first (and only required) parameter is file=filename, the name of the graphics file including the .eps suffix.  If the graphic is the proper size for your document, nothing additional is needed; but if you wish to resize the graphic, add the parameters height=graphicheight and width=graphicwidth. 

EXAMPLES
\begin{figure}
\centering
\epsfig{file=fly.eps}
\caption{A sample black and white graphic (.eps format).}
\end{figure}

\begin{figure}
\centering
\epsfig{file=fly.eps, height=1in, width=1in}
\caption{A sample black and white graphic (.eps format) that has been resized with the \texttt{epsfig} command.}
\end{figure}

\begin{figure*}
\centering
\epsfig{file=flies.eps}
\caption{A sample black and white graphic (.eps format) that needs to span two columns of text.}
\end{figure*}
% and don't forget to end the environment with {figure*}, not % {figure}!

PostScript – Use the command \psfig to reference a .ps figure in the body of the article in order to preview or print it with LaTEX  (assuming you have the proper driver).

The command \psfig works just like \epsfig: it takes a single argument composed of one or more parameters separated by commas.  The first (and only required) parameter is file=filename, the name of the graphics file including the .ps suffix.  If the graphic is the proper size for your document, nothing additional is needed; but if you wish to resize the graphic, add the parameters height=graphicheight and width=graphicwidth. 

EXAMPLE
\begin{figure}
\centering
\psfig{file=rosette.ps, height=1in, width=1in}
\caption{A sample black and white graphic (.ps format) that has been resized with the \texttt{psfig} command.}
\end{figure}

Finally, use the command \caption with a single argument, the text of the caption, to correctly number and caption your figure. 

You may use the figure environment anywhere in the body of the article or the appendices, for every occurrence of figures.  Place the figure or figure* environment and its contents just past the point where it is first mentioned; remember, this location will change to accommodate desirable page breaks.


2.4  Acknowledgements
The Acknowledgements section of your document is optional; it is used, as the name suggests, to acknowledge contributions of individuals or organizations to the document or the research it discusses.  This section should immediately follow the end of the body of your document.  Use the command \section{Acknowledgements} to start the text of your acknowledgements.  A new paragraph can be indicated by a blank line in the input file.

EXAMPLE
\section{Acknowledgements}
We would like to thank Ben Trovato, for his many helpful comments, and his insightful perusal of our first draft.

We also want to thank the many referees of the previous versions of this paper for their extremely useful suggestions.


2.5  Additional Authors
This is the last section that will be set in the body of your paper before the Bibliography.  It is inserted automatically by TEX, if your \numberofauthors is greater than 3, and you entered text in the \additionalauthors command.

If you have additional authors, please see this additional help from the ACM FAQ page 


2.6  Bibliography
You will use the BibTEX facility to produce the bibliography for your article. You must write a bibliography input (.bib) file, which must be run through LaTEX and BibTEX  to create a bibliography output (.bbl) files.   You should then incorporate this .bbl file into your .tex source file when your article is ready for FINAL submission.

You need only two commands in your LaTeX file to produce the bibliography: \bibliographystyle and \bibliography.

The command \bibliographystyle takes a single argument, the name of the bibliography style (abbrv) file which you should use to properly format your citations and the bibliography, in this case, the abbreviated style. The command \bibliographystyle should immediately follow the end of the body of the article or any acknowledgements or appendices.  The command \bibliography should immediately follow the command \bibliographystyle. The command \bibliography takes a single argument, the name of the bibliography database file (the .bib file) for your article. 

EXAMPLE
\bibliographystyle{abbrv}
\bibliography{sigproc}
\end{document}

The .bib file is separate from the .tex file, and consists of entries for each item cited in your article.  These entries must be arranged alphabetically according to author's or editor's names, or publishing organizations for items to which no names can be attached.  The complete rules for the construction of a proper 'bib' file are beyond the scope of this document, but may be found in the LaTEX User’s Guide & Reference Manual.  

You will also need to consult your Local Guide for complete details on running BibTEX.  The main point to remember is that you must run: 
latex yourarticle[.tex]
bibtex yourarticle[.bib]
latex yourarticle[.tex]
latex yourarticle[.tex]

in order to completely resolve all references and produce a proper .bbl file.

EXAMPLES OF BIB FILE ITEMS 
These items correspond to citations in Section 3.3.3.  Note identifier key.
@BOOK{foley:fundamentals,
	AUTHOR = "Foley, J. and ",
	TITLE = "Computer Graphics: Principles and Practice ",
	PUBLISHER = {Addison-Wesley Publishing Co.},
	ADDRESS = {Reading, MA},
	YEAR = "1990"	}

@INPROCEEDINGS{myers:graphical,
	AUTHOR = "B. Myers",
	TITLE = "Graphical Techniques in a spreadsheet for 
specifying user interfaces",
	BOOKTITLE = {Proceedings of ACM CHI’91 Conference
on Human Factors in Computing Systems, (New Orleans, 
LA, Apr 27 - May 2, 1991)},
	PAGES = {243-250}
	YEAR = {1991}	}


@ARTICLE{pausch:lessons,
	AUTHOR = "Randy Pausch and Matthew Conway and Robert DeLine",
	TITLE = "Lessons Learned from SUIT, the Simple
User Interface Toolkit",
	JOURNAL = {ACM Transactions on Information Systems},
	VOLUME = {10},
	NUMBER = {4},
	PAGES = {320-344},
	MONTH = {October},
	YEAR = {1992}	}

@INPROCEEDINGS{wilde:spreadsheet,
	AUTHOR = "Wilde, J. and Lewis, C.",
	TITLE = "Spreadsheet-based interactive graphics: from
prototype to tool",
	BOOKTITLE = {Proceedings of ACM CHI’90 Conference on
Human Factors in Computing Systems, (Seattle Washington,
April 1-5, 1990)},
	PAGES = {153-159}
	YEAR = {1990}	}

Having run this .bib file as described above, you must then replace the line \bibliography{sigproc} in your .tex  source file with the entire contents of the .bbl file. You should include the line \begin{thebibliography}{} before the contents of the .bbl file and include the line \end{thebibliography} after the contents of the .bbl file.  (Note 'sigproc', above, is an alias for the name of your particular article.)

EXAMPLES OF BBL FILE ITEMS 

\bibliographystyle{abbrv}
%\bibliography{sigproc}
% Note that the the command \bibliography{sigproc} must be 
% commented out
% or deleted in the final source tex file
\begin{thebibliography}{1}

\bibitem[\protect\citeauthoryear{Bowman, Debray, and Peterson}{Bowman
  et~al.}{1993}]{bowman:reasoning}
\bibsc{Bowman, M., Debray, S.~K., and Peterson, L.~L.} \bibyear{1993}.
\newblock Reasoning about naming systems.
\newblock \bibemphic{ACM Trans. Program. Lang. Syst.}~\bibemph{15},~5
  (November), 795--825.

\bibitem[\protect\citeauthoryear{Braams}{Braams}{1991}]{braams:babel}
\bibsc{Braams, J.} \bibyear{1991}.
\newblock Babel, a multilingual style-option system for use with latex's
  standard document styles.
\newblock \bibemphic{TUGboat}~\bibemph{12},~2 (June), 291--301.

\bibitem[\protect\citeauthoryear{Herlihy}{Herlihy}{1993}]{herlihy:methodology}
\bibsc{Herlihy, M.} \bibyear{1993}.
\newblock A methodology for implementing highly concurrent data objects.
\newblock \bibemphic{ACM Trans. Program. Lang. Syst.}~\bibemph{15},~5
  (November), 745--770.
\bibitem[\protect\citeauthoryear{Lamport}{Lamport}{1986}]{Lamport:LaTeX}
\bibsc{Lamport, L.} \bibyear{1986}.
\newblock \bibemph{LaTeX User's Guide and Document Reference Manual}.
\newblock Addison-Wesley Publishing Company, Reading, Massachusetts.

\bibitem[\protect\citeauthoryear{Salas and Hille}{Salas and
  Hille}{1978}]{salas:calculus}
\bibsc{Salas, S. and Hille, E.} \bibyear{1978}.
\newblock \bibemph{Calculus: One and Several Variable}.
\newblock John Wiley and Sons, New York.

\end{thebibliography}

2.7  Appendices
The Appendix/Appendices section of your document is optional.  The appendix or appendices should follow the Bibliography section. 
The sig-alternate.cls file provides the appendix environment for proper labeling and formatting of appendices.  Begin the material for all appendices with the command \appendix.  Each separate appendix  begins with a \section{} command, where the argument is the heading for that appendix (you may omit the argument to \section{} if you wish your appendix to have the default name, Appendix A, Appendix B, etc., but do not omit the \section{} command entirely!)  You should enter the text of the section heading in mixed upper and lower case, although the heading will be shown in all caps in the document.

Most of the rules for the body of the article apply to the appendix as well.  You may use typestyle changes (limited by the same caveats as above), mathematical constucts, tables, and figures.  Remember that the hierarchical headings work, but not in the same way as within the body of the article:  \section{} is the heading for a new appendix, \subsection{} is a new appendix section heading, with an order indicator of the form Appendix LetterDigit; e.g. the first subsection in Appendix B is denoted B1.

EXAMPLE
\appendix
\section{An Example} % This is Appendix A
This appendix considers in detail the analysis of the ...
.
.
\section{More Examples} % This is Appendix B
This appendix contains several examples of programs...
\subsection{Towers of Hanoi}
\subsection{Quicksort}

Remember, only one occurrence of \appendix is permitted per document.


2.8  A Final Bit of Formatting
Once you have your paper written, formatted nicely, the bibliographic references resolved (see above), the .bbl file contents inserted and think, in short, you are done, there is one final bit of formatting to do.  It is a bit of brute-force formatting you must do to ensure the two columns of text on the last page are (nearly) balanced.

Print the final page of your document.  Measure the height of the two columns (you can ignore the height of any spanning figures or tables); divide that height by 2.  This is the desired height for the final columns.  Now, measure down the left column by that desired height, and insert the command \balancecolumns at the end of the line at the bottom of that measurement.  If breaking here will cause a hyphenation, you must manually insert the hyphen.
Your file should, for all practical purposes, now be ready for submission!
